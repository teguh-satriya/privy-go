// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// DepthLoggerV2 is an autogenerated mock type for the DepthLoggerV2 type
type DepthLoggerV2 struct {
	mock.Mock
}

// Error provides a mock function with given fields: args
func (_m *DepthLoggerV2) Error(args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// ErrorDepth provides a mock function with given fields: depth, args
func (_m *DepthLoggerV2) ErrorDepth(depth int, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, depth)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Errorf provides a mock function with given fields: format, args
func (_m *DepthLoggerV2) Errorf(format string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, format)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Errorln provides a mock function with given fields: args
func (_m *DepthLoggerV2) Errorln(args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Fatal provides a mock function with given fields: args
func (_m *DepthLoggerV2) Fatal(args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// FatalDepth provides a mock function with given fields: depth, args
func (_m *DepthLoggerV2) FatalDepth(depth int, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, depth)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Fatalf provides a mock function with given fields: format, args
func (_m *DepthLoggerV2) Fatalf(format string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, format)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Fatalln provides a mock function with given fields: args
func (_m *DepthLoggerV2) Fatalln(args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Info provides a mock function with given fields: args
func (_m *DepthLoggerV2) Info(args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// InfoDepth provides a mock function with given fields: depth, args
func (_m *DepthLoggerV2) InfoDepth(depth int, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, depth)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Infof provides a mock function with given fields: format, args
func (_m *DepthLoggerV2) Infof(format string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, format)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Infoln provides a mock function with given fields: args
func (_m *DepthLoggerV2) Infoln(args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// V provides a mock function with given fields: l
func (_m *DepthLoggerV2) V(l int) bool {
	ret := _m.Called(l)

	var r0 bool
	if rf, ok := ret.Get(0).(func(int) bool); ok {
		r0 = rf(l)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Warning provides a mock function with given fields: args
func (_m *DepthLoggerV2) Warning(args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// WarningDepth provides a mock function with given fields: depth, args
func (_m *DepthLoggerV2) WarningDepth(depth int, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, depth)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Warningf provides a mock function with given fields: format, args
func (_m *DepthLoggerV2) Warningf(format string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, format)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Warningln provides a mock function with given fields: args
func (_m *DepthLoggerV2) Warningln(args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

type mockConstructorTestingTNewDepthLoggerV2 interface {
	mock.TestingT
	Cleanup(func())
}

// NewDepthLoggerV2 creates a new instance of DepthLoggerV2. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDepthLoggerV2(t mockConstructorTestingTNewDepthLoggerV2) *DepthLoggerV2 {
	mock := &DepthLoggerV2{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
