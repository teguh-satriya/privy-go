// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ValidationMultiError is an autogenerated mock type for the ValidationMultiError type
type ValidationMultiError struct {
	mock.Mock
}

// AllErrors provides a mock function with given fields:
func (_m *ValidationMultiError) AllErrors() []error {
	ret := _m.Called()

	var r0 []error
	if rf, ok := ret.Get(0).(func() []error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]error)
		}
	}

	return r0
}

// Error provides a mock function with given fields:
func (_m *ValidationMultiError) Error() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewValidationMultiError interface {
	mock.TestingT
	Cleanup(func())
}

// NewValidationMultiError creates a new instance of ValidationMultiError. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewValidationMultiError(t mockConstructorTestingTNewValidationMultiError) *ValidationMultiError {
	mock := &ValidationMultiError{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
